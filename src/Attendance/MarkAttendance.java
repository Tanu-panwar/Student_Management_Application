/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Attendance;

import com.github.sarxos.webcam.*;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutorService;// executer service is the main head...
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.sql.*;
import student_management.DBConnect1;

/**
 *
 * @author Tanu Panwar
 */
public class MarkAttendance extends javax.swing.JFrame implements Runnable, ThreadFactory{
      private WebcamPanel p1 = null;
      private Webcam w1 = null;
      private ExecutorService  e = Executors.newSingleThreadExecutor(this);    
      private boolean webcamOpen = true;
 
    public MarkAttendance() {
        initComponents();
        initWebcam();
        Timer t = new Timer(1, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                update();
            }
        }); 
        t.start();
    }
    
     private void initWebcam() {
//         get the webcam object from the camera
w1 = Webcam.getDefault();
//        checking if there is webcam or not
        if(w1 != null){
//            returns the visible current size that can be captured in pixels
            Dimension[] reso = w1.getViewSizes();
//            get the length
            Dimension maxRes = reso[reso.length - 1];
//            if webcam was open beforehand then close it
            if(w1.isOpen()){
                w1.close();
            }
//            set the size of webcam
            w1.setViewSize(new Dimension(640,480));
//            and then open it
            w1.open();
//            create a panel for the webcam and set its size
            p1 = new WebcamPanel(w1);
            p1.setSize(maxRes);
            p1.setFPSDisplayed(true);
            webPanel.add(p1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 700));
            
            
            webcamOpen= true;
            e.execute(this);
        }
        else{
            JOptionPane.showMessageDialog(null, "Some issue");
        }
    }
   public void update(){
       SimpleDateFormat  s = new SimpleDateFormat("yyyy-MM-dd");
       jLabel3.setText(s.format(new Date()));
    }

    /**
     * Creates new form MarkAttendance
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        LblMark = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblRoll = new javax.swing.JLabel();
        txtRoll = new javax.swing.JTextField();
        lblWeb = new javax.swing.JLabel();
        btnStop = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        webPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 255), 5));

        LblMark.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        LblMark.setForeground(new java.awt.Color(153, 0, 255));
        LblMark.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblMark.setText("Mark Attendance");

        lblDate.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        lblDate.setForeground(new java.awt.Color(153, 0, 255));
        lblDate.setText("Date :");

        lblName.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        lblName.setForeground(new java.awt.Color(153, 0, 255));
        lblName.setText("Name :");

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 255)));
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblRoll.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        lblRoll.setForeground(new java.awt.Color(153, 0, 255));
        lblRoll.setText("Roll No :");

        txtRoll.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtRoll.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 255)));

        lblWeb.setFont(new java.awt.Font("Segoe UI", 0, 26)); // NOI18N
        lblWeb.setForeground(new java.awt.Color(153, 0, 255));
        lblWeb.setText("------WEBCAM------");

        btnStop.setBackground(new java.awt.Color(153, 0, 255));
        btnStop.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        btnStop.setForeground(new java.awt.Color(255, 255, 255));
        btnStop.setText("Stop");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        btnStart.setBackground(new java.awt.Color(153, 0, 255));
        btnStart.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        btnStart.setForeground(new java.awt.Color(255, 255, 255));
        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(153, 0, 255));
        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        webPanel.setBackground(new java.awt.Color(255, 255, 255));
        webPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 255), 5));

        javax.swing.GroupLayout webPanelLayout = new javax.swing.GroupLayout(webPanel);
        webPanel.setLayout(webPanelLayout);
        webPanelLayout.setHorizontalGroup(
            webPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 354, Short.MAX_VALUE)
        );
        webPanelLayout.setVerticalGroup(
            webPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 255), 2));
        jLabel3.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LblMark, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(webPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                                .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblRoll, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                                    .addComponent(txtRoll)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(608, 608, 608)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(602, 602, 602)
                        .addComponent(lblWeb, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(LblMark, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtRoll, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(lblRoll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(46, 46, 46)
                        .addComponent(lblWeb, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(webPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(61, 61, 61))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
         w1.close();
        webcamOpen = false;
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        if (!webcamOpen) {
                    initWebcam();
                }
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarkAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarkAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarkAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarkAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarkAttendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LblMark;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRoll;
    private javax.swing.JLabel lblWeb;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtRoll;
    private javax.swing.JPanel webPanel;
    // End of variables declaration//GEN-END:variables

Map<String,String> resultMap = new HashMap<String,String>();

@Override
public void run() {
    do {
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        try {
            Result res = null;
            BufferedImage image = null;

            if (w1.isOpen()) {
                image = w1.getImage();
                if (image == null) {
                    System.out.println("No image captured from webcam");
                    continue;
                }
                LuminanceSource source = new BufferedImageLuminanceSource(image);
                BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));


                try {
                    res = new MultiFormatReader().decode(bitmap);
                    if (res != null) {
                        System.out.println("QR Code Text: " + res.getText());
//                        jLabel4.setText(res.getText());
                       resultMap = convertJsonToMap(res.getText());
                       System.out.println(resultMap.get("rollno"));
                       txtName.setText(resultMap.get("name"));
                       txtRoll.setText(resultMap.get("rollno"));
                        
                        w1.close();
                        webcamOpen = false;
                        presentAttend(resultMap.get("rollno"));
                        System.out.println("QR Code detected and displayed");
                    } else {
                        System.out.println("No QR Code detected");
                    }
                } catch (com.google.zxing.NotFoundException e) {
                    // Handle the case where no QR code is found in the image
                    System.out.println(e);
                    System.out.println("No QR code found in the image");
                } catch (Exception e) {
                    // Print other exceptions for debugging
                    e.printStackTrace();
                }
            } else {
                System.out.println("Webcam is not open");
            }
        } catch (Exception e) {
            // Print the exception stack trace for debugging
            e.printStackTrace();
        }
    } while (true);
}

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r,"my thread");
        t.setDaemon(true);
        return t;
    }

    private Map<String, String> convertJsonToMap(String json) {
        Gson gson = new Gson();
        java.lang.reflect.Type   type = new TypeToken<Map<String, String>>() {}.getType();
        return gson.fromJson(json, type);
    }
    
    public void presentAttend(String rollno){
        try{
            Connection con = DBConnect1.connect();
            PreparedStatement p1 = con.prepareStatement("select * from attendence where rollno=? ");
            p1.setString(1,rollno);
            ResultSet rs = p1.executeQuery();
//            System.out.println(rs);
//            if(rs.next()==true){
            while(rs.next()){
//               System.out.println(" - = - ");
     
                    if(rs.getString("pa").equalsIgnoreCase("-") ){
//                        upate the attendence of that roll number
    System.out.println("pa = - ");
                           PreparedStatement a1 = con.prepareStatement("update attendence set date = ? , pa = ? where rollno = ?");
                           a1.setString(1,jLabel3.getText());
                           a1.setString(2,"present");
                           a1.setString(3,rollno);
                            int a = a1.executeUpdate();
                            if(a==1){
                                JOptionPane.showMessageDialog(null,
                                        resultMap.get("name")+" is marked present ");
}            
else{
                                JOptionPane.showMessageDialog(null,"Some Error");
                            }
                    }
                    else if(!rs.getString("date").equalsIgnoreCase(jLabel3.getText()) ){
                    System.out.println("pa = -       "+rs.getString("date"));

                             String qry = "insert into attendence values(?,?,?)";
                                PreparedStatement ps = con.prepareStatement(qry);
                                ps.setString(1,rollno);
                                ps.setString(2,jLabel3.getText());
                                ps.setString(3,"present");

                                int av = ps.executeUpdate();
                                if(av==1){
JOptionPane.showMessageDialog(null,
                                            resultMap.get("name")+" is marked present ");
                                }
                                else{
                                    JOptionPane.showMessageDialog(null,"Some Error");
                                }
                   }                               
                    else{
                        JOptionPane.showMessageDialog(null,  resultMap.get("name") + "  is already marked present");
                    }
               }
        }
        catch(Exception e){
            System.out.print(e);
        }
       }
}
